# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool: 'masvc_adoRunners'

stages:
  - stage: getClientList
    displayName: Gather current client list from AzTableStorage
    jobs:
      - job: getClientList
        displayName: Get client list from AzTableStorage
        steps:
        - task: AzurePowerShell@5
          inputs:
            azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
            ScriptType: FilePath
            ScriptPath: '$(System.DefaultWorkingDirectory)/utilities/helperScripts/getClientSubscriptions.ps1'
            ScriptArguments: -tableResourceGroup "masvc-lighthouseAutomation-rg" -tableStorageAccount "masvclighthousetables001" -tableName "azMSPClients"
            azurePowerShellVersion: 'LatestVersion'
  - stage: Deploy
    displayName: Deploy templates to tenants
    jobs:
    - deployment: uamiStack
      displayName: deploy bicep templates for MicroAge User Assigned Managed Identities Stack
      environment: 'azMSPLighthouseProd'
      strategy:
        runOnce:
          deploy:
            steps:
             - task: AzurePowerShell@5
               inputs:
                azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
                ScriptType: FilePath
                ScriptPath: '$(System.DefaultWorkingDirectory)/solutions/onboardingManagedIdentities/deploy.ps1'
                ScriptArguments: -deploymentName "masvcAzMSP_ManagedIdentitiesDeploymentStack" -testDeploy $false -verbose
                azurePowerShellVersion: 'LatestVersion'
    - deployment: monitoringStack
      displayName: deploy bicep templates for MicroAge Monitoring Stack
      environment: 'azMSPLighthouseProd'
      strategy:
        runOnce:
          deploy:
            steps:
             - task: AzurePowerShell@5
               inputs:
                azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
                ScriptType: FilePath
                ScriptPath: '$(System.DefaultWorkingDirectory)/solutions/onboardingMonitoring/deploy.ps1'
                ScriptArguments: -deploymentName "masvcAzMSP_MonitoringDeploymentStack" -testDeploy $false -verbose
                azurePowerShellVersion: 'LatestVersion'
