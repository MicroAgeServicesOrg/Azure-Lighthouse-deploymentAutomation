# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool: 'masvc_adoRunners'

stages:
  - stage: getClientList
    displayName: Gather current client list from AzTableStorage
    jobs:
      - job: getClientList
        displayName: Get client list from AzTableStorage
        steps:
        - task: AzurePowerShell@5
          name: getSubscriptions
          inputs:
            azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
            ScriptType: FilePath
            ScriptPath: '$(System.DefaultWorkingDirectory)/utilities/helperScripts/getClientSubscriptions.ps1'
            ScriptArguments: -tableResourceGroup "masvc-lighthouseAutomation-rg" -tableStorageAccount "masvclighthousetables001" -tableName "azMSPClients"
            azurePowerShellVersion: 'LatestVersion'
        - task: AzurePowerShell@5
          name: showOutput
          inputs:
            azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
            ScriptType: InlineScript
            Inline: |
              #Testing to see if we can read the output variable from the previous step
              Write-Host "Trying to Read: $(getSubscriptions.currentSubscriptionsArray)"
            azurePowerShellVersion: 'LatestVersion'
        - task: AzurePowerShell@5
          name: ManagedIdentitiesStack
          inputs:
            azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
            ScriptType: FilePath
            ScriptPath: '$(System.DefaultWorkingDirectory)/utilities/helperScripts/multiClientDeployment.ps1'
            ScriptArguments: -deploymentName "masvcAzMSP_ManagedIdentitiesDeploymentStack" -testDeploy $true -bicepFilePath ".\solutions\monitorOnboarding\main.bicep"
            azurePowerShellVersion: 'LatestVersion'
            
