# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

variables:
  subscriptionid: 'c2d9ff11-8e55-47f8-a8f2-8b9b4a7d18e8'
  deploymentlocation: 'westus2'
  templatefile: 'main.bicep'
  parameterfile: 'main.parameters.json'

stages:
  - stage: preDeploy
    jobs:
      - job: scanWhatif
        displayName: scan and run whatif
        pool:
          vmImage: windows-latest

        steps:
        - task: RunARMTTKTests@1
          inputs:
            templatelocation: '$(System.DefaultWorkingDirectory)\*'
            resultLocation: '$(System.DefaultWorkingDirectory)\results'
            allTemplatesMain: false
            cliOutputResults: true
            ignoreExitCode: true
            
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'NUnit'
            testResultsFiles: '$(System.DefaultWorkingDirectory)\results\*-armttk.xml'
          condition: always()
        - task: AzureCLI@2
          inputs:
            azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
            scriptType: 'ps'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az --version
              az account set --subscription $(subscriptionid)
              az deployment sub what-if --location $(deploymentlocation) --template-file $(templatefile) --parameters $(parameterfile)

  - stage: deployBicep
    jobs:
    
    - job: waitForValidation
      timeoutInMinutes: 4320 # task times out in 72hrs
      displayName: Wait for external validation
      pool: server
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440 #task times out in 24hrs
        inputs:
          notifyUsers: 'dmejak@microageservices.com'
          instructions: 'Please validate the build $(Build.BuildId) configuration and resume'
          onTimeout: 'resume'
  
    - job: deployAzure
      displayName: deploy bicep to Azure
      pool:
        vmImage: 'ubuntu-latest'
      dependsOn: [waitForValidation]
    
      steps:
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'Azure DevOps Connection - Multi Tenant Deployment'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az --version
            az account set --subscription $(subscriptionid)
            az deployment create --location $(deploymentlocation) --template-file $(templatefile) --parameters $(parameterfile)
      
